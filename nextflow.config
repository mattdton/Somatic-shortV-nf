// Workflow details
manifest {
    
  author = ' Tracy Chew, Cali Willet, Nandan Deshpande, Sydney Informatics Hub, University of Sydney'
  name = 'SomaticShortV-nf'
  description = 'GATK somatic short variant calling pipeline'
  homePage = 'https://github.com/Sydney-Informatics-Hub/Somatic-shortV-nf'
    }

// Mandate a minimum version of nextflow required to run the pipeline
nextflowVersion     = '!>=20.07.1'

// Set default parameters
params {
  version                       = '1.0'
  help                          = false
  input                         = null
  ref                           = false
  intervals                     = false
  outDir		                    = './results'
  ponvcf                        = false
  common_biallelic_variants     = false
  number_of_intervals           = 0
  dict                          = false
  gadi_account       	= false
  setonix_account     = false
  whoami            	= false
}


// Preset use of containers with Singularity
singularity {
    enabled		    = false
    autoMounts		= true
    }

// Job profiles
profiles {
  local		{ includeConfig "config/local.config" }
  gadi		{ includeConfig "config/gadi.config" }
  }

// Fail a task if any command returns non-zero exit code
shell = ['/bin/bash', '-euo', 'pipefail']

// Resources for each process
// default run resource parameters
process {
  container = 'quay.io/biocontainers/gatk4:4.4.0.0--py36hdfd78af_0'
//  cpus = 1
//  memory = '20.GB'
//
//withName: 'mutect2' {
//        memory = '60.GB'
//    }

//withName: 'GatherVcfs' {
//        memory = '60.GB'
//	}
 

//withName: 'MergeMutectStats' {
//	memory = '60.GB'
//        } 

//withName: 'getFilteredVariants' {
//    	memory = '60.GB'
//	} 
//
}

// Define timestamp, to avoid overwriting existing trace
def timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

// Produce a workflow diagram
dag {
  enabled = true
  file = "${params.outDir}/runInfo/SomaticShortV_dag_${timestamp}.svg"
}

report {
  enabled = true
  file = "${params.outDir}/runInfo/SomaticShortV_report_${timestamp}.html"
}

timeline {
  enabled = true
	overwrite = true
	file = "${params.outDir}/runInfo/SomaticShortV_timeline_${timestamp}.html"
}

trace {
	enabled = true
	overwrite = true
  file = "${params.outDir}/runInfo/SomaticShortV_trace_${timestamp}.txt"
  fields = 'process,name,status,queue,realtime,cpus,%cpu,memory,%mem,rss,env'
}
